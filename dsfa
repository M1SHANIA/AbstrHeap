Vasya Kozyrev, [06.12.2022 23:07]
package graphic;



import Model.Zamek;
import Model.ZamekCompare;
import Pamatky.PamatkyP;
import Table.TableException;
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.FlowPane;
import javafx.stage.Stage;
import util.Coordinates;
import util.eTypKey;
import util.eTypProhl;


import java.io.FileNotFoundException;
import java.util.Iterator;
import java.util.Optional;

public class MainFX extends Application {

    private PamatkyP pamatky;
    private ListView<ZamekCompare> langsListView;
    private eTypProhl typProhl;
    private TextField field;


    public static void main(String[] args) {
        launch(args);
    }


        private ControlPanelVbox comandsV(){
            var controlV = new ControlPanelVbox();
            controlV.newButton("FIRST", nastavPrvni());
            controlV.newButton("NEXT", nastavDalsi());
            controlV.newButton("PREVIOUS", nastavPred());
            controlV.newButton("LAST", nastavPosledni());
            controlV.newButton("UKAZ NEJBLIZ",najdiNejblizsi());
            controlV.newButton("ODEBER NEJBLIZ",odeberNejbliz());
            controlV.newComboBox("ITERACE",typIteraci());
            controlV.newButton("ZMENIT POLOHU",zmenit());
            return controlV;
        }

    private EventHandler<ActionEvent> zmenit() {
        return actionEvent -> {
            try {
                TextInputDialog dialog = new TextInputDialog();
                dialog.setTitle("GPS");
                dialog.setHeaderText("Zadejte gps");
                dialog.setContentText("GPS:");
                Optional<String> result = dialog.showAndWait();
                if (result.isPresent()) {
                    String klic = result.get();
                    pamatky.setPoloha(klic);
                    field.setText(klic);
                }
            }catch (TableException e){
                alert(e.getMessage());
            }
        };
    }

    private EventHandler<ActionEvent> odeberNejbliz() {
        return actionEvent -> {
            pamatky.odeberNejbizsi();
            obnovList();
        };
    }

    private EventHandler<ActionEvent> typIteraci() {
        return actionEvent -> {
          typProhl = ((ComboBox<eTypProhl>)actionEvent.getSource()).getValue();
          obnovList();
        };
    }

    private EventHandler<ActionEvent> nastavPred() {
        return actionEvent -> {
            langsListView.getSelectionModel().select(langsListView.getSelectionModel().getSelectedIndex()-1);
        };
    }


    private EventHandler<ActionEvent> najdiNejblizsi() {
        return actionEvent -> {
          langsListView.getSelectionModel().select(pamatky.dejNejblizsi());
          langsListView.scrollTo(pamatky.dejNejblizsi());
        };
    }


    private ControlPanelHBox commandsH() {
            var controlH = new ControlPanelHBox();
            controlH.newLabel("");
            controlH.newButton("IMPORT", nacist());
            controlH.newButton("CLEAR ALL", zrusit());
//            controlH.newLabel("NEW DATA:");
            controlH.newButton("Novy Zamek",novyA());
            controlH.newButton("VYBUDUJ", prebuduj());
            field = controlH.newField(pamatky.getPoloha());
            return controlH;
        }


    private EventHandler<ActionEvent> prebuduj() {
        return actionEvent -> {
            pamatky.vybuduj();
            obnovList();
        };
    }

Vasya Kozyrev, [06.12.2022 23:07]
@Override
        public void start(Stage stage) throws Exception {
            pamatky = new PamatkyP();
            typProhl = eTypProhl.HLOUBKA;
            FlowPane root = new FlowPane(creatList(),comandsV(),commandsH());
            Scene scene = new Scene(root, 620,590);
            stage.setScene(scene);
            stage.setMaxWidth(640);
            stage.setMaxHeight(620);
            stage.setResizable(false);
            stage.setTitle("Zamky");
            stage.show();
    }


    private EventHandler<ActionEvent> novyA() {
        return event ->{
            try {
                ProcesDialog procesDialog = new ProcesDialog(new Zamek("", "", ""));
                procesDialog.showAndWait();
                Zamek zamek = procesDialog.vratit();
                procesDialog.close();
                if (zamek != null) {
                    ZamekCompare zamekCompare = new ZamekCompare(zamek, Coordinates.nacist(pamatky.getPoloha(), zamek.getGps()));
                    pamatky.vloz(zamekCompare);
                    obnovList();
                }
            } catch (TableException e) {
                alert(e.getMessage());
            }

        };
    }

    private void obnovList() {
        try {
            Iterator<ZamekCompare> iterator = pamatky.iterator(eTypProhl.HLOUBKA);
            langsListView.getItems().clear();
            switch (typProhl){
                case SIRKA -> iterator = pamatky.iterator(eTypProhl.SIRKA);
            }
            while (iterator.hasNext()) {
                langsListView.getItems().add(iterator.next());
            }
        } catch (TableException e){ alert(e.getMessage());}
    }

    private EventHandler<ActionEvent> zrusit() {
        return event ->{
            langsListView.getSelectionModel().select(null);
            pamatky.zrus();
            langsListView.getItems().clear();
        };

    }

    private EventHandler<ActionEvent> nacist() {
        return actionEvent -> {
            TextInputDialog dialog = new TextInputDialog();
            dialog.setTitle("Soubor");
            dialog.setHeaderText("Zadejte nazev souboru");
            dialog.setContentText("Nazev:");
            Optional<String> result = dialog.showAndWait();
            if (result.isPresent()) {
                int i = 0;
                try {
                    i = pamatky.nacti(result.get());
                } catch (FileNotFoundException | TableException e) {
                    alert(e.getMessage());
                }
                if(i>0)obnovList();
                else new Alert(Alert.AlertType.INFORMATION,"Chyba cteni dat",ButtonType.OK).show();
            }
        };

    }


    private EventHandler<ActionEvent> nastavPosledni() {
        return event -> {
            langsListView.getSelectionModel().selectLast();
            langsListView.scrollTo(langsListView.getSelectionModel().getSelectedItem());
        };
    }

    private EventHandler<ActionEvent> nastavDalsi() {
        return event ->{
            langsListView.getSelectionModel().selectNext();
        };
    }


    private EventHandler<ActionEvent> nastavPrvni() {
       return event -> {
           langsListView.getSelectionModel().selectFirst();
           langsListView.scrollTo(langsListView.getSelectionModel().getSelectedItem());
       };
    }


    private ListView<ZamekCompare> creatList(){
        ObservableList<ZamekCompare> langs = FXCollections.observableArrayList();
        langsListView = new ListView<>(langs);
        langsListView.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);
        langsListView.setPrefSize(500, 500);
        return langsListView;
    }

    private void alert(String msg){
        new Alert(Alert.AlertType.INFORMATION,msg,ButtonType.OK).show();
    }

}